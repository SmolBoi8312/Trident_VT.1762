
[gcode_macro Z_TILT_ADJUST]
rename_existing:_Z_TILT_ADJUST
gcode:
	SAVE_GCODE_STATE NAME=STATE_Z_TILT
    status_homing
	BED_MESH_CLEAR
	{% if not printer.z_tilt.applied %}
	_Z_TILT_ADJUST horizontal_move_z=10 retry_tolerance=1
	{% endif %}
	_Z_TILT_ADJUST horizontal_move_z=2
    idle_white
	RESTORE_GCODE_STATE NAME=STATE_Z_TILT

[gcode_macro MOTOR_SYNC]
gcode:
        RESONATING
        SYNC_MOTORS
        SYNC_MOTORS
        idle_white

[gcode_macro VIBRATION_TEST]  # Change accel per hz in printer.cfg under resonace_holder
gcode:
  # Axis
  {% set axis = params.AXIS|string %}
  # Seconds
  {% set seconds = params.SECONDS|int %}
  #Freq
  {%set int = params.FREQ| int%}
  HOLD_RESONANCE {rawparams}

[gcode_macro G32]
gcode:
	BED_MESH_CLEAR
	G28
	Z_TILT_ADJUST
	G28
	G0 X150 Y150 Z30 F3600

[gcode_macro XY_CENTER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro PARKFRONT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKCENTER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro enable_xy]
gcode:
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro disable_xy]
gcode:
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=0

[gcode_macro BASE_WHITE]
gcode:
    SET_LED LED="my_neopixel" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1

[gcode_macro FEET_WHITE]
gcode:
    SET_LED LED="Feet_led" RED=0.2 GREEN=0.2 BLUE=0.2

[gcode_macro FEET_PURPLE]
gcode:
    SET_LED LED="Feet_led" RED=0.15 GREEN=0.05 BLUE=0.64

[gcode_macro CLEAN_NOZZLE]
variable_start_x:200
variable_start_y:307
variable_park_x:200
variable_start_z:7
variable_wipe_dist:30
variable_wipe_qty:5
variable_wipe_spd:100
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	G90
	G1 X{park_x} Y{start_y} F24000
	{% for wipes in range(1, (wipe_qty + 1)) %}
	G1 X{start_x + wipe_dist} F{wipe_spd * 60}
	G1 X{start_x} F{wipe_spd * 60}
	{% endfor %}
	G1 X{park_x} F{wipe_spd * 60}

[gcode_macro nozzle_park]
gcode:
    G91
    G0 Z5 F10000
	G90
	G0 X194 Y308 F10000
	G0 X238 F10000

[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}

[gcode_macro M190] # Wait Bed Temp
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}  # Wait for bed temp (within n degrees)
    {% endif %}

[delayed_gcode FAN_ON_WITH_HEATER]
initial_duration: 1
gcode:
    PC_HOTEND
    UPDATE_DELAYED_GCODE ID=FAN_ON_WITH_HEATER DURATION=5 #Re-checks every 5 seconds

[gcode_macro PC_HOTEND]
gcode:
    {% set he_temp = printer[printer.toolhead.extruder].temperature|float %}
    
    {% if he_temp > 50 and printer.fan.speed == 0 %}
        M106 S13  # Set fan speed to 5% if hotend temp is above 50c and fan is 0%
    {% endif %}

    {% if he_temp < 48 and printer.fan.speed < 15 %}
        M106 S0  # Set fan speed to 0% if hotend temp is bellow 50c and fan speed is 5%
    {% endif %}
